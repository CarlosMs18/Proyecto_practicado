@model IEnumerable<TipoCuenta>

@{
    ViewData["Title"] = "Tipos Cuenta";
}

<h1>Tipos Cuentas</h1>
<h5>
    El tipo de cuenta se refiere a como podemos agrupar cuentas.
    Ejemplo: Prestamos, tarjetas de credito, etc.
</h5>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>

@if(Model.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Acciones</th>
                <th>Nombre</th>
            </tr>
        </thead>

        <tbody id="reordenable">
            @foreach (var tipoCuenta in Model)
            {
                <tr>
                    <td>
                        <input type="hidden" value="@tipoCuenta.Id" class="ids">
                        <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                        <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Borrar</a>
                    </td>
                    <td>
                        @tipoCuenta.Nombre
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@section Scripts{
    <script>

        const urlOrdenar = '@Url.Action("ordenar")'; //genera la url donde se encunetra ordenar

        $(function(){
            $("#reordenable").sortable({
                stop :async function(e, ui){ //stop -> cuasndo terminemos de arrastrar que ejecutaremos
                   await actualizarOrdenes();
                }
            });
            //$("#reordenable").sortable()({
            //    stop :async function(e , ui){
            //       await  actualizarOrdenes();
            //    }
            //});

            async function actualizarOrdenes(){
                const ids = obtenerIdsDeElementos();
               await  enviarIdsAlBackend(ids);
            }

            function obtenerIdsDeElementos(){
                const ids = $(".ids").map(function(){  //selecionamos el campo que contiene la clase .ids, mapfuncion me permite iterar en cada uno
                                                    //y obteener su valor
                    return $(this).val();//retortnamos el valor obtenuidoi
                }).get(); //lo convertimos en un arreglo

                return ids;
            }

            async function enviarIdsAlBackend(ids){
                var data = JSON.stringify(ids);  //necesitamos covertirlo en json


                await fetch(urlOrdenar, {
                    method : 'POST',
                    body :data,
                    headers : {
                        'Content-Type':'application/json'
                    }
                });
            }
        })
    </script>
}