@model IEnumerable<IndiceCuentaViewModel>

@{
    ViewData["Title"] = "Listado de Cuentas";

    string FormatearBalance(decimal balance)
    {
        return Math.Abs(balance).ToString();
    }


    string ObtenerClaseBalance(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }
}

<h1 class="display-4">Cuentas Generales</h1>
<a class="btn btn-primary" asp-action="Crear">Crear Cuenta</a>

<div class="contenedor-totales "  >
    <div>
        <div>
            <strong class="fs-3 text-primary" >Activos</strong>
        </div>
        <div class="fw-bold">
            <span class="fs-3">@Model.Where(x => x.Balance > 0).Sum(x => x.Balance)</span>
        </div>
    </div>
    

   <div>
        <div>
            <strong class="fs-3 text-danger">Pasivos</strong>
        </div>
        <div class="fw-bold">
            <span class="fs-3">@Model.Where(x => x.Balance < 0).Sum(x => x.Balance)</span>
        </div>
   </div>


    <div>
        <div>
            <strong class="fs-3 text-success">Total</strong>
        </div>
        <div class="fw-bold">
            <span class="fs-3">@Model.Sum(x => x.Balance)</span>
        </div>
    </div>
</div>

<div class="accordion acordeon-cuentas mt-4">
    @foreach(var tipoCuenta in Model)
    {
        <div class="accordion-item ">
            <h2 class="accordion-header " id="cabeceraUno">
                @{
                    var id = tipoCuenta.TipoCuenta.Replace(" ", ""); //por si acaso el tipo cuenta trae espacio y no queremos eso
                    var dataBSTarget = "#" + id; //generamos un id de manera dinamica para el acordeon asi se maneja en bootstrap
                    var claseTipoCuenta = ObtenerClaseBalance(tipoCuenta.Balance);


                //ahora que tenemos estas variables declaradas pdemos usarla el html
                }

                <button class="accordion-button" type="button" data-bs-toggle="collapse"
                        data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <span><strong>@tipoCuenta.TipoCuenta</strong></span>
                        <span class="@claseTipoCuenta">@FormatearBalance(tipoCuenta.Balance)</span>
                    </span>
                </button>

            </h2>

            <div id="@id" class="accordion-collapse collapse show">
                <div>
                    <ul class="list-group">
                        @foreach (var cuenta in tipoCuenta.Cuentas)
                        {

                            var claseCuenta = ObtenerClaseBalance(cuenta.Balance);
                            <li class="list-group-item">
                                <span>
                                    <strong><a asp-action="Detalle" asp-route-id="@cuenta.Id">@cuenta.Nombre</a></strong>
                                    <a asp-action="Editar" asp-route-id="@cuenta.Id" class="btn btn-primary">
                                        <i class="bi-pencil-fill"></i>
                                    </a>
                                    <a asp-action="Borrar" asp-route-id="@cuenta.Id" class="btn btn-danger">
                                        <i class="bi-trash-fill"></i>
                                    </a>



                                </span>
                                <span class="@claseCuenta">@FormatearBalance(cuenta.Balance)</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>